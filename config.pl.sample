#
# config.pl.sample - 예제 설정 파일
#
# config.pl 파일이 없으면 이 파일을 설정 파일로 사용합니다. 
# 이 파일을 상황에 맞게 수정해서 config.pl로 이름을 고쳐주세요

use utf8;

# 제목
title => 'Mdkkoji', 

# 서버가 사용할 포트
port => 8080, 

# 색인할 문서의 확장자
suffix => 'md', 

# 문서의 첫번째 줄에서 제목 필드 대신 사용할 수 있는 표시. 
title_marker => '# ', 

# 색인할 필드와 기본값. 기본값이 없으면 빈 문자열이나 undef
idx_fields => [
	tags => '(none)', 
	type => ''
],

# 문서 목록에서 하위 디렉토리에 있는 문서까지 보여줄지 여부
recursive => 1,

# 문서 목록에서 한 페이지당 출력할 문서 개수
entries_per_page => 10, 

# 파일 시스템에서 사용하는 인코딩
code_page => 'utf8',

# 색인할 문서가 들어있는 디렉토리
doc_root => "manual",

# URL 경로 부분의 첫번째 세그먼트에 따라 다른 디렉토리에 URL을 매핑합니다
root_overrides => {
	# e.g.
	# diary => "$ENV{HOME}/diary"
	
	# theme은 테마를 위해 남겨둡니다
}, 

# 템플릿, css 등이 담긴 디렉토리. 여기 있는 문서는 색인되지 않습니다
theme => 'default-theme',

# 템플릿 파일 이름. theme 옵션으로 지정한 디렉토리에서 찾습니다.
templates => {
	list => 'list.tpl',
	view => 'view.tpl',
	# default-theme에서 마크다운 확장을 쓰려면(Text::MultiMarkdown 모듈 필요): 
	# view => 'view-multimarkdown.tpl' 
},

# 시간 필드에서 사용할 시간 형식. 첫번째 형식이 자동 생성되는
# 시간 필드에 적용됩니다 
time_fmt => [
	'%Y-%m-%d %H:%M:%S', 
	'%Y-%m-%d',
	'%Y년 %m월 %d일',
],

dbi => {
	# DBI 생성자에 넘길 인자 목록 
	args => ['dbi:SQLite:dbname=mdkkoji.db','','', { RaiseError => 1 }],

	# DBI 인스턴스를 생성한 직후에 실행할 쿼리. 문자열은 쿼리로서 실행하고, 
	# 서브루틴 참조는 생산한 DBI 인스턴스와, 설정 파일의 내용이 담긴 해시 참조를 
	# 인자로 넘겨서 실행한다.
	init => [
		'PRAGMA foreign_keys=ON', 
		'PRAGMA synchronous=OFF', 
		'PRAGMA journal_mode=MEMORY',
		'PRAGMA default_cache_size=10000',
		'PRAGMA locking_mode=EXCLUSIVE'
	],

	# MySQL을 쓸 경우 아래와 같이 설정을 쓸 수도 있습니다.
	# args => [ 'DBI:mysql:database=mdkkoji;host=localhost;', 'user', 'password', {
	# 	RaiseError => 1, 
	# }],
	# init => [
	# 	'SET NAMES utf8 COLLATE utf8_general_ci', 
	# 	'SET CHARACTER SET utf8', 
	# 	'SET storage_engine=MYISAM'
	# ]
}
